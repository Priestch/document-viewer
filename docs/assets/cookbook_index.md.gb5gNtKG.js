import{_ as e,c as o,o as t,a4 as a}from"./chunks/framework.C3uWxsa_.js";const b=JSON.parse('{"title":"Cookbook","description":"The missing cookbook for pdf.js.","frontmatter":{"title":"Cookbook","description":"The missing cookbook for pdf.js.","head":[["link",{"rel":"canonical","href":"https://priestch.github.io/document-viewer/docs/cookbook"}]]},"headers":[],"relativePath":"cookbook/index.md","filePath":"cookbook/index.md","lastUpdated":1739547406000}'),s={name:"cookbook/index.md"},r=a('<h1 id="the-missing-cookbook-for-pdf-js" tabindex="-1">The Missing Cookbook for pdf.js <a class="header-anchor" href="#the-missing-cookbook-for-pdf-js" aria-label="Permalink to &quot;The Missing Cookbook for pdf.js&quot;">​</a></h1><nav class="table-of-contents"><ul><li><a href="#how-to-disable-text-selection">How to disable text selection?</a></li><li><a href="#how-to-setup-range-request-only-download-necessary-data">How to setup Range Request only download necessary data?</a></li></ul></nav><h2 id="how-to-disable-text-selection" tabindex="-1">How to disable text selection? <a class="header-anchor" href="#how-to-disable-text-selection" aria-label="Permalink to &quot;How to disable text selection?&quot;">​</a></h2><p>You can set <a href="/document-viewer/docs/learned-knowledge/#textlayermode"><code>textLayerMode</code></a> option to 0 to disable text layer totally.</p><h2 id="how-to-setup-range-request-only-download-necessary-data" tabindex="-1">How to setup <code>Range Request</code> only download necessary data? <a class="header-anchor" href="#how-to-setup-range-request-only-download-necessary-data" aria-label="Permalink to &quot;How to setup `Range Request` only download necessary data?&quot;">​</a></h2><p>The <code>Range Request</code> only works if you use the default pdf.js viewer. if not, you have to implement all by yourself to support <code>Range Request</code>. Even if you use the default viewer, the server must also be configured to support <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Range_requests" target="_blank" rel="noreferrer">Range Request</a> correctly.</p><p>For those who already use the default viewer and still suffer this issue, go through the checklist to ensure your server was configured correctly:</p><ul><li>Make sure you didn&#39;t set the <code>disableRange</code> option</li><li>Make sure the first get request that downloads the pdf return 200 or 206.</li><li>Make sure the first get request has the right <code>Content-Length</code>, <code>Accept-Ranges</code> and <code>Content-Encoding</code> header <ul><li>The <code>Content-Length</code> should be larger then <code>2 * rangeChunkSize</code>, the default <a href="https://github.com/mozilla/pdf.js/blob/f6b356eff753358bf3263d174dc0cf4852800edd/src/display/api.js#L76C7-L76C31" target="_blank" rel="noreferrer">rangeChunkSize</a> is 65536</li><li>The <code>Accept-Ranges</code> should be <code>bytes</code> and the server must really support it</li><li>The <code>Content-Encoding</code> should be <code>identity</code> if present</li></ul></li></ul><p>If you ensure all these were configured correctly, then you can debug the <a href="https://github.com/mozilla/pdf.js/blob/f6b356eff753358bf3263d174dc0cf4852800edd/src/display/fetch_stream.js#L130-L168" target="_blank" rel="noreferrer">code block</a> step by step to find out what&#39;s the real issue.</p><p>I posted a similar comment in <a href="https://github.com/mozilla/pdf.js/discussions/18524#discussioncomment-10202877" target="_blank" rel="noreferrer">discussion</a>.</p>',10),d=[r];function n(l,i,c,h,u,f){return t(),o("div",null,d)}const g=e(s,[["render",n]]);export{b as __pageData,g as default};
