import{_ as e,c as t,o,Q as r}from"./chunks/framework.03d10376.js";const f=JSON.parse('{"title":"Common Pitfalls When Integrate PDF.js","description":"","frontmatter":{},"headers":[],"relativePath":"pitfalls.md","filePath":"pitfalls.md","lastUpdated":1698502733000}'),a={name:"pitfalls.md"},s=r('<h1 id="common-pitfalls-when-integrate-pdf-js" tabindex="-1">Common Pitfalls When Integrate PDF.js <a class="header-anchor" href="#common-pitfalls-when-integrate-pdf-js" aria-label="Permalink to &quot;Common Pitfalls When Integrate PDF.js&quot;">​</a></h1><h3 id="api-version-mismatch-the-worker-version" tabindex="-1">API version mismatch the Worker version <a class="header-anchor" href="#api-version-mismatch-the-worker-version" aria-label="Permalink to &quot;API version mismatch the Worker version&quot;">​</a></h3><blockquote><p>The API version &quot;a.b.c&quot; does not match the Worker version &quot;x.y.z&quot;</p></blockquote><p><a href="https://github.com/mozilla/pdf.js/wiki/Frequently-Asked-Questions#reasons-for-the-error-the-api-version-abc-does-not-match-the-worker-version-xyz" target="_blank" rel="noreferrer">Reason for the Error</a></p><details><summary>Why such error?</summary><blockquote> PDF.js use a web worker architecture for better rendering performance. <p>A typical web application has only one bundle result, but PDF.js has two bundles, one for the viewer, one for the worker.</p><p>The versions of the two bundles must match to work properly. If the versions mismatch, it may work sometimes, but when it not, I think it&#39;s hard to figure such issues.</p><p>Although the explicit error may annoys developer at first, it do save your time from debugging such issues.</p></blockquote></details><h3 id="origin-not-match" tabindex="-1">Origin not match <a class="header-anchor" href="#origin-not-match" aria-label="Permalink to &quot;Origin not match&quot;">​</a></h3><blockquote><p>file origin does not match viewer&#39;s</p></blockquote><p><a href="https://github.com/mozilla/pdf.js/wiki/Frequently-Asked-Questions#can-i-load-a-pdf-from-another-server-cross-domain-request" target="_blank" rel="noreferrer">Reason for the Error</a></p><p>You can try to use the methods mentioned in the official FAQ to resolve the issue, or you can try the <a href="https://priestch.github.io/document-viewer" target="_blank" rel="noreferrer"><code>@document-kits/viewer</code></a>, it has a <code>disableCORSCheck</code> option to disable the CORS check for quick start. Be careful, you should not enable this option in production if you don&#39;t know what it means.</p>',9),i=[s];function n(h,l,c,m,u,d){return o(),t("div",null,i)}const k=e(a,[["render",n]]);export{f as __pageData,k as default};
